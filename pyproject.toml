[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "coding-agent"
version = "0.0.1"
description = "Coding Agent"
authors = [
    { name = "Praveen M", email = "praveenhm@yahoo.com" }
]
readme = "README.md"
requires-python = ">=3.12,<3.14"
dependencies = [
    "browser-use>=0.1.41,<0.2.0",
    "anthropic[vertex]>=0.42.0,<0.43.0",
    "db-dtypes>=1.2.0,<2.0.0",
    "docker>=7.1.0,<8.0.0",
    "fastapi>=0.111.0,<0.112.0",
    "gunicorn>=22.0.0,<23.0.0",
    "google-cloud-aiplatform>=1.71.0,<2.0.0",
    "google-genai>=1.10.0,<2.0.0",
    "googlemaps>=4.10.0,<5.0.0",
    "instructor>=1.4.3,<2.0.0",
    "ipykernel>=6.29,<7.0",
    "markdown>=3.7.0,<4.0.0",
    "matplotlib>=3.9.0,<4.0.0",
    "notebook>=7.2.0,<8.0.0",
    "numpy>=2.1.0,<3.0.0",
    "pandas>=2.2.0,<3.0.0",
    "python-dotenv>=1.0.0,<2.0.0",
    "python-json-logger>=2.0.7,<3.0.0",
    "pytest-cov>=5.0.0,<6.0.0",
    "ratelimit>2.2.0",
    "requests>=2.27.1,<3.0.0",
    "scikit-learn>=1.5.0",
    "seaborn>=0.13.0,<0.14.0",
    "uvicorn>=0.30.1,<0.31.0",
    "vertexai>=1.71.0,<2.0.0",
    "weasyprint>=63.1,<64.0",
    "ruff>=0.6.0,<0.7.0",
    "black",
    "feedparser",
]

[project.optional-dependencies]
dev = [
    "mypy>=1.10.1,<2.0.0",
    "pytest>=8.2.2,<9.0.0",
]

[tool.hatch.build.targets.wheel]
packages = ["src"]

# --- Existing Tool Configurations ---

[tool.coverage.run]
source = ["src"]

[tool.ruff]
line-length = 120

# Add this new section to exclude specific files or directories
exclude = [
    "__pypackages__",
    "src/DATA/",
    "**/*.ipynb"
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "N",  # PEP8 naming convetions
    "D"  # pydocstyle
]
ignore = [
    "C901",  # too complex
    "W191",  # indentation contains tabs
    "D401",  # imperative mood
    "D103",
    "D104",
    "D100",
    "D101",
    "N806",
    "N803",
    "E501",
    "D107",
    "D102",
    "D201",
    "D202",
    "D205",
    "B904",
    "B008",
    "E402",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.extend-per-file-ignores]
"tests/**/*.py" = [
    # at least this three should be fine in tests:
    "S101", # asserts allowed in tests...
    "E712", # == for asserts
    "ARG", # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT", # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    # The below are debateable
    "PLR2004", # Magic value used in comparison, ...
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
]
